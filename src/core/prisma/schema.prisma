generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Writing Server 

model WritingState {
  id             String @id @default(uuid()) @map("id")
  currentStoryId String @map("current_story_id")
  lastAuthorId   String @map("last_author_id")

  @@map("state")
}

model Story {
  id         String  @id @default(uuid()) @map("id")
  text       String  @map("text")
  isComplete Boolean @default(false) @map("is_complete")

  authors Author[]

  @@map("stories")
}

model Author {
  id       String @id @default(uuid()) @map("id")
  userId   String @map("userId")
  username String @map("username")
  storyId  String @map("story_id")

  story Story @relation(fields: [storyId], references: [id], onDelete: Cascade)

  @@map("authors")
}

// -----------------------------------------------------------------------------------------------------

// Hot Springs Server 

model CultState {
  id String @id @default(uuid()) @map("id")
}

model Fanfic {
  id             String @id @default(uuid()) @map("id")
  currentStoryId String @map("current_story_id")
  lastAuthorId   String @map("last_author_id")
}

model Block {
  id         String  @id @default(uuid()) @map("id")
  text       String  @map("text")
  isComplete Boolean @default(false) @map("is_complete")
}
